generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model BusinessOwner {
  id          String   @id @default(uuid())
  displayName String
  phoneNumber String?
  bio         String?
  website     String?
  userId      String // References auth.users in Supabase
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@index([userId])
}

model Client {
  id                      String   @id @default(uuid())
  firstName               String
  lastName                String
  phoneNumber             String
  referralCode            String?
  displayName             String
  interests               String[]
  location                String?
  followingCount          Int      @default(0)
  notificationPreferences Json?
  userId                  String   @unique // Changed to unique reference
  created_at              DateTime @default(now())
  updated_at              DateTime @updatedAt

  @@index([userId])
}
model ClientOnboarding {
  id          String   @id @default(uuid())
  userId      String   @unique  // References Supabase auth.users.id
  appUsage    String[]
  discovery   String
  interests   String[]
  customDiscovery String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Business {
  id             String   @id @default(uuid())
  ownerId        String
  name           String
  description    String
  category       String
  address        String?
  city           String?
  state          String?
  country        String?
  lat            Float?
  lng            Float?
  logoUrl        String?
  coverPhotoUrl  String?
  isVerified     Boolean  @default(false)
  followersCount Int      @default(0)
  postsCount     Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@index([ownerId])
}

model Follow {
  id                   String   @id @default(uuid())
  clientId             String
  businessId           String
  followedAt           DateTime @default(now())
  notificationsEnabled Boolean  @default(false)

  @@index([clientId])
  @@index([businessId])
}

model Post {
  id            String   @id @default(uuid())
  businessId    String
  content       String
  imageUrls     String[] // JSON string array
  tags          String[] // JSON string array
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  likesCount    Int      @default(0)
  commentsCount Int      @default(0)
  isPinned      Boolean  @default(false)

  @@index([businessId])
}
model PasswordResetOtp {
  id         String   @id @default(uuid())
  userId     String   // References Supabase auth.users.id
  email      String
  code       String   // 4-digit code (stored hashed)
  expiresAt  DateTime
  isUsed     Boolean  @default(false)
  createdAt  DateTime @default(now())

  @@index([userId])
  @@index([email])
}
